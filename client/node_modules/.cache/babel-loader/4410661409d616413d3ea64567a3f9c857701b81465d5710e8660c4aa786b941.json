{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shukl\\\\Desktop\\\\AryanShukla-Graded-Coding-Assignment-React-main\\\\moviesOnTheTip\\\\client\\\\src\\\\Pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport NavigationBar from \"../Components/NavigationBar\";\nimport Card from \"../Components/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState('movies-in-theaters');\n  const isFavouriteTab = selectedCategory === 'favourit';\n  const [searchString, setSearchString] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [favouritMovieNames, setFavouritMovieNames] = useState([]);\n  useEffect(() => {\n    let fetchUrl = `http://localhost:4000/${selectedCategory}`;\n    if (searchString) {\n      fetchUrl = `http://localhost:4000/${selectedCategory}?title_like=${searchString}`;\n    }\n    console.log('fetchUfrl', fetchUrl);\n    fetch(`http://localhost:4000/favourit/?title_like=${searchString}`).then(response => response.json()).then(data => {\n      const movieNames = data.map(item => item.title);\n      setFavouritMovieNames(movieNames);\n      if (selectedCategory === 'favourit') setMovies(data);\n    });\n    if (selectedCategory !== 'favourit') {\n      fetch(fetchUrl).then(response => response.json()).then(data => {\n        setMovies(data);\n      });\n    }\n  }, [selectedCategory, searchString]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavigationBar, {\n      selectCategory: setSelectedCategory,\n      searchStr: setSearchString\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"0 60px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Movies (\", selectedCategory.replaceAll(\"-\", \" \"), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), searchString ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Search results for string : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 39\n        }, this), \" \", searchString]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 33\n      }, this) : null, movies.length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"flex-start\"\n        },\n        children: movies.map((data, id) => {\n          const isAlreadyAdded = favouritMovieNames.includes(data.title);\n          return /*#__PURE__*/_jsxDEV(Card, {\n            movieData: data,\n            movieCategory: selectedCategory,\n            isFavouriteTab: isFavouriteTab,\n            setMovies: setMovies,\n            isDisabledBtn: isAlreadyAdded\n          }, `${id} ${data.title}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No Movies Found......\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Home, \"Pk41gkluQJ2re4eLm/qjg5gml4A=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","NavigationBar","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","selectedCategory","setSelectedCategory","isFavouriteTab","searchString","setSearchString","movies","setMovies","favouritMovieNames","setFavouritMovieNames","fetchUrl","console","log","fetch","then","response","json","data","movieNames","map","item","title","children","selectCategory","searchStr","fileName","_jsxFileName","lineNumber","columnNumber","style","margin","replaceAll","length","display","flexDirection","flexWrap","justifyContent","id","isAlreadyAdded","includes","movieData","movieCategory","isDisabledBtn","_c","$RefreshReg$"],"sources":["C:/Users/shukl/Desktop/AryanShukla-Graded-Coding-Assignment-React-main/moviesOnTheTip/client/src/Pages/Home.jsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport NavigationBar from \"../Components/NavigationBar\";\nimport Card from \"../Components/Card\";\n\nconst Home = () => {\n    const [selectedCategory, setSelectedCategory] = useState('movies-in-theaters');\n    const isFavouriteTab = selectedCategory === 'favourit';\n    const [searchString, setSearchString] = useState('');\n    const [movies, setMovies] = useState([]);\n    const [favouritMovieNames, setFavouritMovieNames] = useState([]);\n\n    useEffect(() => {\n        let fetchUrl = `http://localhost:4000/${selectedCategory}`;\n        if (searchString) {\n            fetchUrl = `http://localhost:4000/${selectedCategory}?title_like=${searchString}`\n        }\n        console.log('fetchUfrl', fetchUrl);\n        fetch(`http://localhost:4000/favourit/?title_like=${searchString}`)\n            .then(response => response.json())\n            .then(data => {\n                const movieNames = data.map(item => item.title);\n                setFavouritMovieNames(movieNames)\n                if (selectedCategory === 'favourit') setMovies(data);\n            });\n        if (selectedCategory !== 'favourit') {\n            fetch(fetchUrl)\n                .then(response => response.json())\n                .then(data => {\n                    setMovies(data);\n                });\n        }\n    }, [selectedCategory, searchString]);\n\n    return (\n        <>\n            <NavigationBar selectCategory={setSelectedCategory} searchStr={setSearchString}/>\n            <br/>\n            <div style={{\n                margin: \"0 60px\"\n            }}>\n                <h3>\n                    Movies ({selectedCategory.replaceAll(\"-\", \" \")})\n                </h3>\n                {searchString ? <span><b>Search results for string : </b> {searchString}</span> : null}\n                {movies.length !== 0 ?\n                    <div style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        justifyContent: \"flex-start\",\n\n                    }}>\n                        {movies.map((data, id) => {\n                            const isAlreadyAdded = favouritMovieNames.includes(data.title);\n                            return <Card key={`${id} ${data.title}`} movieData={data} movieCategory={selectedCategory}\n                                         isFavouriteTab={isFavouriteTab} setMovies={setMovies}\n                                         isDisabledBtn={isAlreadyAdded}/>\n                        })}\n                    </div> : <div>No Movies Found......</div>\n                }\n            </div>\n\n\n        </>\n    );\n\n}\n\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}